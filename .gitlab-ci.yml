stages:
  - changelog

generate_changelog:
  stage: changelog
  image: alpine:latest
  before_script:
    - apk add git
  script:
    |-
    git config --global user.email "ci-bot@gitlab.com"
    git config --global user.name "GitLab CI"

    git checkout main  # Alterna para o branch main antes do push
    git fetch --tags
    LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

    if [ -z "$LAST_TAG" ]; then
      echo "Nenhuma tag encontrada. Criando um changelog inicial.";
      git log --pretty=format:"- %s" > CHANGELOG.md;
    else
      echo "Última tag encontrada: $LAST_TAG";
      git log --pretty=format:"- %s" "$LAST_TAG"..HEAD > CHANGELOG.md;
    fi

    cat CHANGELOG.md

    git add CHANGELOG.md
    git commit -m "Atualizando changelog para $LAST_TAG"

    git push origin main  # Garante que está empurrando para o branch correto
 
  only:
    - main

prepare_job:
  stage: prepare
  image: alpine:latest
  rules:
  - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - apk add curl jq
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" | jq -r .notes > release_notes.md'
  artifacts:
    paths:
    - release_notes.md

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_job
      artifacts: true
  rules:
  - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - echo "Creating release"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: release_notes.md
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: 'Container Image $CI_COMMIT_TAG'
          url: "https://$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA"
